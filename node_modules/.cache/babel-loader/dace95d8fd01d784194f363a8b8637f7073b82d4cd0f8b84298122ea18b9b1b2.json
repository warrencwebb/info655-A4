{"ast":null,"code":"var _jsxFileName = \"/Users/warrenwebb/info655-a3-wcw34/src/Components/Playlist.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SongsAndPodcasts = () => {\n  const songs = [{\n    title: \"A Milli\",\n    artist: \"Lil Wayne\",\n    year: 2008\n  }, {\n    title: \"Uptown\",\n    artist: \"Drake\",\n    year: 2010\n  }, {\n    title: \"Runaway\",\n    artist: \"Kanye West\",\n    year: 2013\n  }];\n  const podcasts = [{\n    season: 1,\n    episode: 101,\n    espisodeTitle: 'Houston We have a Problem'\n  }, {\n    episode: 203,\n    espisodeTitle: 'The Lies We tell'\n  }, {\n    season: 4,\n    episode: 404,\n    espisodeTitle: 'System Error'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [song.title, \" by \", song.artist, \" in \", song.year]\n      }, song.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Podcasts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: podcasts.map(podcast => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: podcast.espisodeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 44\n        }, this), podcast.season && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" Season: \", podcast.season]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Episode: \", podcast.episode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, this)]\n      }, podcast.espisodeTitle, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = SongsAndPodcasts;\nexport default SongsAndPodcasts;\nvar _c;\n$RefreshReg$(_c, \"SongsAndPodcasts\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SongsAndPodcasts","songs","title","artist","year","podcasts","season","episode","espisodeTitle","children","fileName","_jsxFileName","lineNumber","columnNumber","map","song","podcast","_c","$RefreshReg$"],"sources":["/Users/warrenwebb/info655-a3-wcw34/src/Components/Playlist.js"],"sourcesContent":["import React from \"react\";\n\nconst SongsAndPodcasts = () => {\n  const songs = [\n    {\n      title: \"A Milli\",\n      artist: \"Lil Wayne\",\n      year: 2008,\n    },\n    {\n      title: \"Uptown\",\n      artist: \"Drake\",\n      year: 2010,\n    },\n    {\n      title: \"Runaway\",\n      artist: \"Kanye West\",\n      year: 2013,\n    },\n  ];\n\n  const podcasts = [\n    {\n      season: 1,\n      episode: 101,\n      espisodeTitle: 'Houston We have a Problem',\n    },\n    {\n        episode: 203,\n        espisodeTitle: 'The Lies We tell',\n    },\n    {\n        season: 4,\n        episode: 404,\n        espisodeTitle: 'System Error',\n    },\n  ];\n\n  return (\n    <div>\n      <h1>Songs</h1>\n      <ul>\n        {songs.map((song) => (\n          <li key={song.title}>{song.title} by {song.artist} in {song.year}</li>\n        ))}\n      </ul>\n      <h1>Podcasts</h1>\n      <ul>\n        {podcasts.map((podcast) => (\n          <li key= {podcast.espisodeTitle}><p>{podcast.espisodeTitle}</p>\n          {podcast.season && <p> Season: {podcast.season}</p>}\n           <p>Episode: {podcast.episode}</p></li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default SongsAndPodcasts;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EAC7B,MAAMC,KAAK,GAAG,CACZ;IACEC,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE,WAAW;IACnBC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,KAAK,EAAE,QAAQ;IACfC,MAAM,EAAE,OAAO;IACfC,IAAI,EAAE;EACR,CAAC,EACD;IACEF,KAAK,EAAE,SAAS;IAChBC,MAAM,EAAE,YAAY;IACpBC,IAAI,EAAE;EACR,CAAC,CACF;EAED,MAAMC,QAAQ,GAAG,CACf;IACEC,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,GAAG;IACZC,aAAa,EAAE;EACjB,CAAC,EACD;IACID,OAAO,EAAE,GAAG;IACZC,aAAa,EAAE;EACnB,CAAC,EACD;IACIF,MAAM,EAAE,CAAC;IACTC,OAAO,EAAE,GAAG;IACZC,aAAa,EAAE;EACnB,CAAC,CACF;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdd,OAAA;MAAAU,QAAA,EACGR,KAAK,CAACa,GAAG,CAAEC,IAAI,iBACdhB,OAAA;QAAAU,QAAA,GAAsBM,IAAI,CAACb,KAAK,EAAC,MAAI,EAACa,IAAI,CAACZ,MAAM,EAAC,MAAI,EAACY,IAAI,CAACX,IAAI;MAAA,GAAvDW,IAAI,CAACb,KAAK;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAkD,CACtE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLd,OAAA;MAAAU,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjBd,OAAA;MAAAU,QAAA,EACGJ,QAAQ,CAACS,GAAG,CAAEE,OAAO,iBACpBjB,OAAA;QAAAU,QAAA,gBAAiCV,OAAA;UAAAU,QAAA,EAAIO,OAAO,CAACR;QAAa;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAC9DG,OAAO,CAACV,MAAM,iBAAIP,OAAA;UAAAU,QAAA,GAAG,WAAS,EAACO,OAAO,CAACV,MAAM;QAAA;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClDd,OAAA;UAAAU,QAAA,GAAG,WAAS,EAACO,OAAO,CAACT,OAAO;QAAA;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFxBG,OAAO,CAACR,aAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEO,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACI,EAAA,GAtDIjB,gBAAgB;AAwDtB,eAAeA,gBAAgB;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}